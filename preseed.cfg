d-i debian-installer/language string en
d-i debian-installer/country string CN
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us


d-i hw-detect/select_modules multiselect all
d-i anna/choose_modules multiselect none
d-i netcfg/use_autoconfig boolean true
d-i netcfg/choose_interface select auto
d-i netcfg/link_wait_timeout string 3
d-i netcfg/get_hostname string debian001
d-i netcfg/get_domain string .indac.biz
d-i hw-detect/load_firmware boolean true
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string ntp.ntsc.ac.cn
d-i time/zone string Asia/Shanghai


d-i mirror/protocol string http
d-i mirror/country string China
d-i mirror/http/mirror select mirrors.ustc.edu.cn


d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password your_encryped_passwd_such_as_rsa
d-i passwd/make-user boolean true
d-i passwd/user-fullname string common_user
d-i passwd/username string common_user
d-i passwd/user-password-crypted password your_encryped_passwd_such_as_rsa


d-i partman/early_command string \
  debconf-set partman-auto/disk "$(list-devices disk | head -n1)"; \
  debconf-set partman-auto/init_automatically_partition select some_device

#d-i partman-auto/method string crypto
#d-i partman-crypto/passphrase password passwd_for_disk
#d-i partman-crypto/passphrase-again password passwd_for_disk
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-auto-lvm/guided_size string max
d-i partman-auto-lvm/new_vg_name string cryptvg


d-i partman-auto/expert_recipe string \
    root-encrypted :: \
        512 512 512 fat32 \
            $iflabel{ gpt } \
            $bootable{ } \
            method{ efi } \
            format{ } \
            mountpoint{ /boot/efi } \
        . \
        1024 1024 1024 xfs \
            method{ format } \
            format{ } \
            use_filesystem{ } \
            filesystem{ xfs } \
            mountpoint{ /boot } \
        . \
        10000 10000 -1 crypto \
            method{ crypto } \
            lvmok{ } \
            $defaultignore{ } \
            vg_name{ cryptvg } \
        . \
            10240 10240 -1 xfs \
                method{ lvm } \
                format{ } \
                use_filesystem{ } \
                filesystem{ xfs } \
                mountpoint{ / } \
                lv_name{ root } \
            . \
            8192 8192 8192 linux-swap \
                method{ swap } \
                format{ } \
                lv_name{ swap } \
            . \
        .


d-i partman/confirm_nooverwrite boolean true
d-i partman/confirm boolean true
d-i partman/choose_partition select finish
d-i partman/mount_style select uuid


d-i base-installer/initramfs-tools/driver-policy select targeted
d-i apt-setup/use_mirror boolean false
d-i pkgsel/update-policy select none
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true
tasksel tasksel/first multiselect standard
d-i pkgsel/include string openssh-server network-manager
d-i grub-installer/efi boolean true
d-i grub-installer/update-nvram boolean true


d-i pkgsel/upgrade select none
d-i debian-edu-install/participate-popcon boolean false
d-i popularity-contest/participate boolean false
d-i apt-setup/cdrom/set-first boolean false


d-i preseed/late_command string \
    in-target sh -c 'echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware" > /etc/apt/sources.list'; \
    in-target sh -c 'echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list'; \
    in-target sh -c 'echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware" >> /etc/apt/sources.list'; \
    in-target sh -c 'echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list'; \
    in-target sh -c 'apt-get --y update'; \
    in-target sh -c 'apt-get --y --no-install-recommends upgrade'; \
    in-target sh -c 'apt-get --y autoremove'; \
    in-target sh -c 'apt-get clean'; \
    in-target sh -c 'apt-get install -y wget ca-certificates'; \
    in-target sh -c 'mkdir -p /usr/local/share/ca-certificates'; \
    in-target sh -c 'update-initramfs -u -k all'; \
    in-target sh -c 'echo "blacklist nouveau" > /etc/modprobe.d/blacklist-nouveau.conf'; \
    in-target sh -c 'echo "options nouveau modeset=0" >> /etc/modprobe.d/blacklist-nouveau.conf'; \
    in-target sh -c '/usr/sbin/useradd -m robot -s /bin/bash'; \
    in-target sh -c 'mkdir -p /home/robot/.ssh'; \
    in-target sh -c 'chown -R robot:robot /home/robot/.ssh'; \
    in-target sh -c 'chmod 700 /home/robot/.ssh'; \
    in-target sh -c 'chmod 600 /home/robot/.ssh/authorized_keys'; \
    in-target sh -c 'echo "robot ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/robot-nopasswd'; \
    in-target sh -c 'chmod 0440 /etc/sudoers.d/robot-nopasswd'; \
    in-target sh -c 'echo 1 > /sys/kernel/mm/ksm/run';
d-i finish-install/reboot_in_progress note
